{"1747245526444":{"actionType":"saveAll","createdAt":"1747245526444","actionID":"1747245526444","userID":"#TEMP","path":"system.capsules.0f198dd9-d848-4540-bb27-829ddaafc053.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"() => {\n  // ---- Sua Chave Gemini Aqui\n  const apiKey = \"AIzaSyC8MD4ZTRedYmVIvwfAAVCX-OthA6QQ37c\";\n\n  // ---- Gemini API\n  async function generateContent() {\n    const url =\n      \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\" +\n      apiKey;\n\n    const data = {\n      contents: [\n        {\n          parts: [{ text: \"Explique em pt-br como funciona uma IA\" }],\n        },\n      ],\n    };\n\n    try {\n      await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    } catch (error) {\n      console.error(\"Erro na requisição:\", error);\n    }\n  }\n\n  // ---- Styles\n  const stlCenter = {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n\n  const stlBtn = {\n    ...stlCenter,\n    backgroundColor: \"darkcyan\",\n    width: 100,\n    height: 24,\n  };\n\n  const stlTxt = {\n    color: \"white\",\n  };\n\n  const stlInput = {\n    color: \"white\",\n  };\n\n  const stlContainer = {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    ...stlCenter,\n    backgroundColor: \"#333\",\n  };\n\n  return (\n    <RN.View style={stlContainer}>\n      <RN.TextInput style={stlInput} />\n      <RN.Pressable style={stlBtn} onPress={generateContent}>\n        <RN.Text style={stlTxt}>GEMINI</RN.Text>\n      </RN.Pressable>\n    </RN.View>\n  );\n}","newValue":"() => {\n  // ---- Sua Chave Gemini Aqui\n  const apiKey = \"AIzaSyC8MD4ZTRedYmVIvwfAAVCX-OthA6QQ37c\";\n\n  // ---- Gemini API\n  async function generateContent() {\n    const url =\n      \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\" +\n      apiKey;\n\n    const data = {\n      contents: [\n        {\n          parts: [{ text: \"Explique em pt-br como funciona uma IA\" }],\n        },\n      ],\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Erro:\" + response.status + response.statusText);\n      }\n\n      const result = await response.json();\n      console.log(\"Resultado da API:\", result);\n    } catch (error) {\n      console.error(\"Erro na requisição:\", error);\n    }\n  }\n\n  // ---- Styles\n  const stlCenter = {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n\n  const stlBtn = {\n    ...stlCenter,\n    backgroundColor: \"darkcyan\",\n    width: 100,\n    height: 24,\n  };\n\n  const stlTxt = {\n    color: \"white\",\n  };\n\n  const stlInput = {\n    color: \"white\",\n  };\n\n  const stlContainer = {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    ...stlCenter,\n    backgroundColor: \"#333\",\n  };\n\n  return (\n    <RN.View style={stlContainer}>\n      <RN.TextInput style={stlInput} />\n      <RN.Pressable style={stlBtn} onPress={generateContent}>\n        <RN.Text style={stlTxt}>GEMINI</RN.Text>\n      </RN.Pressable>\n    </RN.View>\n  );\n}"}}